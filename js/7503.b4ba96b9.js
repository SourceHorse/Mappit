"use strict";(self["webpackChunkmappitweb"]=self["webpackChunkmappitweb"]||[]).push([[7503],{80060:function(e,t,r){r.d(t,{E:function(){return n}});const s=e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t};class i{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const i=this._options[e];if(i){const n="boolean"!=typeof i&&i.name?i.name:e,o="boolean"!=typeof i&&i.getter?i.getter(t):t[e];null!=o&&(r[n]=s(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function n(e){return new i(e)}},60317:function(e,t,r){r.d(t,{et:function(){return g},ef:function(){return b},bI:function(){return T},Wf:function(){return w}});var s=r(94848),i=r(22130),n=r(8693),o=r(61332),a=r(99659),u=r(16829),l=r(61445),c=r(60931),p=r(58006),d=(r(15055),r(81653),r(94315),r(56667)),m=r(77623),f=r(55417),y=r(6852);let h=class extends c.wq{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,l._)([(0,p.Cb)()],h.prototype,"accumulateAttributeNames",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"currentVersion",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"defaultTravelMode",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"directionsLanguage",void 0),(0,l._)([(0,d.J)(f.GX)],h.prototype,"directionsLengthUnits",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"directionsSupportedLanguages",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"directionsTimeAttribute",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"hasZ",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"impedance",void 0),(0,l._)([(0,p.Cb)()],h.prototype,"networkDataset",void 0),(0,l._)([(0,p.Cb)({type:[y.Z]})],h.prototype,"supportedTravelModes",void 0),h=(0,l._)([(0,m.j)("esri.rest.support.NetworkServiceDescription")],h);const v=h;function g(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function b(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function w(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,n.pC)(e)&&e.hasZ)return!0}return!1}async function T(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const n=(0,u.lA)({f:"json",token:t},r),{data:o}=await(0,s["default"])(e,n);o.supportedTravelModes||(o.supportedTravelModes=[]);for(let s=0;s<o.supportedTravelModes.length;s++)o.supportedTravelModes[s].id||(o.supportedTravelModes[s].id=o.supportedTravelModes[s].itemId);const a=o.currentVersion>=10.4?A(e,t,r):N(e,r),{defaultTravelMode:l,supportedTravelModes:c}=await a;return o.defaultTravelMode=l,o.supportedTravelModes=c,v.fromJSON(o)}async function N(e,t){var r,i;const n=(0,u.lA)({f:"json"},t),{data:l}=await(0,s["default"])(e.replace(/\/rest\/.*$/i,"/info"),n);if(!l||!l.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:c}=l,p=(0,a.Qj)(c)+"/sharing/rest/portals/self",{data:d}=await(0,s["default"])(p,n),m=(0,o.hS)("helperServices.routingUtilities.url",d);if(!m)return{supportedTravelModes:[],defaultTravelMode:null};const f=(0,u.en)(c),y=/\/solve$/i.test(f.path)?"Route":/\/solveclosestfacility$/i.test(f.path)?"ClosestFacility":"ServiceAreas",h=(0,u.lA)({f:"json",serviceName:y},t),v=(0,a.Qj)(m)+"/GetTravelModes/execute",g=await(0,s["default"])(v,h),b=[];let w=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var T;if("supportedTravelModes"===t.paramName){if(null!=(T=t.value)&&T.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(w=t.value)}}return{supportedTravelModes:b,defaultTravelMode:w}}async function A(e,t,r){try{const i=(0,u.lA)({f:"json",token:t},r),n=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:o,defaultTravelMode:l}}=await(0,s["default"])(n,i);return{supportedTravelModes:o,defaultTravelMode:l}}catch(v){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:v})}}},88833:function(e,t,r){r.d(t,{Z:function(){return v}});var s=r(61445),i=(r(80388),r(8693)),n=r(58006),o=(r(15055),r(81653),r(94315),r(62269)),a=r(77623),u=r(39264);let l=class extends u.Z{};(0,s._)([(0,n.Cb)()],l.prototype,"events",void 0),(0,s._)([(0,n.Cb)()],l.prototype,"strings",void 0),l=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeature")],l);const c=l;var p=r(48169),d=r(50157),m=r(87429),f=r(43564),y=r(49304);let h=class extends p["default"]{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const s=null!=(r=t.summary.envelope.spatialReference)?r:t.spatialReference,i=s&&m.Z.fromJSON(s);return e.map((e=>{var t,r;const s=this._decompressGeometry(e.compressedGeometry),n=new f.Z({...s,spatialReference:i}),o=null!=(t=null==(r=e.events)?void 0:r.map((e=>{const{arriveTimeUTC:t,ETA:r,point:{x:s,y:n,z:o},strings:a}=e;return new c({geometry:new y.Z({x:s,y:n,z:o,hasZ:void 0!==o,spatialReference:i}),attributes:{ETA:r,arriveTimeUTC:t},strings:a})})))?t:[];return new c({attributes:e.attributes,events:o,geometry:n,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,i.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,r=0,s=0,i=0;const n=[];let o,a,u,l,c,p,d,m,f=0,y=0,h=0;if(c=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),c||(c=[]),0===parseInt(c[f],32)){f=2;const e=parseInt(c[f],32);f++,p=parseInt(c[f],32),f++,1&e&&(y=c.indexOf("|")+1,d=parseInt(c[y],32),y++),2&e&&(h=c.indexOf("|",y)+1,m=parseInt(c[h],32),h++)}else p=parseInt(c[f],32),f++;for(;f<c.length&&"|"!==c[f];){o=parseInt(c[f],32)+t,f++,t=o,a=parseInt(c[f],32)+r,f++,r=a;const e=[o/p,a/p];y&&(l=parseInt(c[y],32)+s,y++,s=l,e.push(l/d)),h&&(u=parseInt(c[h],32)+i,h++,i=u,e.push(u/m)),n.push(e)}return{paths:[n],hasZ:y>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new f.Z({spatialReference:t});const r=[];for(const o of e)for(const e of o.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:n}=e[0];return new f.Z({hasM:i,hasZ:n,paths:[s],spatialReference:t})}};(0,s._)([(0,n.Cb)({type:d.Z,json:{read:{source:"summary.envelope"}}})],h.prototype,"extent",void 0),(0,s._)([(0,n.Cb)()],h.prototype,"features",void 0),(0,s._)([(0,o.r)("features")],h.prototype,"readFeatures",null),(0,s._)([(0,n.Cb)()],h.prototype,"geometryType",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],h.prototype,"mergedGeometry",null),(0,s._)([(0,n.Cb)()],h.prototype,"routeId",void 0),(0,s._)([(0,n.Cb)()],h.prototype,"routeName",void 0),(0,s._)([(0,n.Cb)({value:null,readOnly:!0})],h.prototype,"strings",null),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],h.prototype,"totalDriveTime",void 0),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalLength"}}})],h.prototype,"totalLength",void 0),(0,s._)([(0,n.Cb)({json:{read:{source:"summary.totalTime"}}})],h.prototype,"totalTime",void 0),h=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeatureSet")],h);const v=h},56546:function(e,t,r){r.d(t,{Z:function(){return c}});var s=r(61445),i=r(38511),n=r(60931),o=r(58006),a=(r(15055),r(81653),r(94315),r(77623));const u=new i.X({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let l=class extends n.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],l.prototype,"description",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:u.read,write:u.write}})],l.prototype,"type",void 0),l=(0,s._)([(0,a.j)("esri.rest.support.GPMessage")],l);const c=l},47696:function(e,t,r){r.d(t,{Z:function(){return c}});var s=r(61445),i=r(38511),n=r(58006),o=(r(15055),r(81653),r(94315),r(77623)),a=r(56546);const u=new i.X({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let l=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,n.Cb)({type:String,json:{read:u.read,write:u.write}})],l.prototype,"type",void 0),l=(0,s._)([(0,o.j)("esri.rest.support.NAMessage")],l);const c=l},6852:function(e,t,r){r.d(t,{Z:function(){return d}});var s,i=r(61445),n=r(60931),o=r(86232),a=r(58006),u=(r(94315),r(56667)),l=r(77623),c=r(55417);let p=s=class extends n.wq{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new s((0,o.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,i._)([(0,a.Cb)({type:[Object],json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"distanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"id",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"name",void 0),(0,i._)([(0,a.Cb)({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:{allowNull:!0}}})],p.prototype,"simplificationTolerance",void 0),(0,i._)([(0,u.J)(c.q$)],p.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],p.prototype,"timeAttributeName",void 0),(0,i._)([(0,u.J)(c.DJ)],p.prototype,"type",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),(0,i._)([(0,u.J)(c.ip)],p.prototype,"uturnAtJunctions",void 0),p=s=(0,i._)([(0,l.j)("esri.rest.support.TravelMode")],p);const d=p},55417:function(e,t,r){r.d(t,{$7:function(){return a},BW:function(){return f},DJ:function(){return c},Dd:function(){return h},GX:function(){return n},SS:function(){return m},W7:function(){return p},cW:function(){return v},hB:function(){return o},ip:function(){return l},no:function(){return u},oi:function(){return y},q$:function(){return i},td:function(){return g},yP:function(){return d}});var s=r(38511);const i=(0,s.w)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),n=(0,s.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),o=(0,s.w)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),a=(0,s.w)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),u=(0,s.w)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),l=((0,s.w)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,s.w)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),c=((0,s.w)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,s.w)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,s.w)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),p=(0,s.w)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),d=(0,s.w)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),m=(0,s.w)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),f=(0,s.w)()({1:"right",2:"left"},{useNumericKeys:!0}),y=(0,s.w)()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),h=(0,s.w)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),v=(0,s.w)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),g=(0,s.w)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0})}}]);
//# sourceMappingURL=7503.b4ba96b9.js.map