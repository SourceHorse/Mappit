"use strict";(self["webpackChunkmappitweb"]=self["webpackChunkmappitweb"]||[]).push([[8609],{28609:function(e,r,t){t.r(r),t.d(r,{default:function(){return k}});var i=t(61445),s=t(58006),a=(t(15055),t(81653),t(94315),t(77623)),o=t(94848),n=t(80060),l=t(33482),u=t(60317),p=t(16829),c=(t(80388),t(39264)),y=t(60931),f=t(8693),d=t(62269),m=t(87429),B=t(88833),b=t(48169),g=t(47696),h=t(49304),_=t(43564),C=t(91407);function v(e){return e.features.map((r=>{const t=m.Z.fromJSON(e.spatialReference),i=c.Z.fromJSON(r);return(0,f.pC)(i.geometry)&&(i.geometry.spatialReference=t),i}))}function Z(e){return b["default"].fromJSON(e).features.map((e=>e.geometry))}let R=class extends y.wq{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return Z(e)}readIncidents(e){return Z(e)}readPointBarriers(e,r){return Z(r.barriers)}readPolylineBarriers(e){return Z(e)}readPolygonBarriers(e){return Z(e)}readRoutes(e){return v(e)}};(0,i._)([(0,s.Cb)({type:[B.Z]})],R.prototype,"directions",void 0),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"facilities",void 0),(0,i._)([(0,d.r)("facilities")],R.prototype,"readFacilities",null),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"incidents",void 0),(0,i._)([(0,d.r)("incidents")],R.prototype,"readIncidents",null),(0,i._)([(0,s.Cb)({type:[g.Z]})],R.prototype,"messages",void 0),(0,i._)([(0,s.Cb)({type:[h.Z]})],R.prototype,"pointBarriers",void 0),(0,i._)([(0,d.r)("pointBarriers",["barriers"])],R.prototype,"readPointBarriers",null),(0,i._)([(0,s.Cb)({type:[_.Z]})],R.prototype,"polylineBarriers",void 0),(0,i._)([(0,d.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,i._)([(0,s.Cb)({type:[C.Z]})],R.prototype,"polygonBarriers",void 0),(0,i._)([(0,d.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,i._)([(0,s.Cb)({type:[c.Z]})],R.prototype,"routes",void 0),(0,i._)([(0,d.r)("routes")],R.prototype,"readRoutes",null),R=(0,i._)([(0,a.j)("esri.rest.support.ClosestFacilitySolveResult")],R);const w=R,P=(0,n.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});async function A(e,r,t){const i=[],s=[],a={},n={},c=(0,p.en)(e),{path:y}=c;r.incidents&&r.incidents.features&&(0,u.et)(r.incidents.features,s,"incidents.features",a),r.facilities&&r.facilities.features&&(0,u.et)(r.facilities.features,s,"facilities.features",a),r.pointBarriers&&r.pointBarriers.features&&(0,u.et)(r.pointBarriers.features,s,"pointBarriers.features",a),r.polylineBarriers&&r.polylineBarriers.features&&(0,u.et)(r.polylineBarriers.features,s,"polylineBarriers.features",a),r.polygonBarriers&&r.polygonBarriers.features&&(0,u.et)(r.polygonBarriers.features,s,"polygonBarriers.features",a);const f=await(0,l.aX)(s);for(const o in a){const e=a[o];i.push(o),n[o]=f.slice(e[0],e[1])}if((0,u.Wf)(n,i)){let e=null;try{e=await(0,u.bI)(y,r.apiKey,t)}catch{}e&&!e.hasZ&&(0,u.ef)(n,i)}for(const o in n)n[o].forEach(((e,t)=>{r.get(o)[t].geometry=e}));const d={...t,query:{...c.query,...P.toQueryParams(r),f:"json"}},{data:m}=await(0,o["default"])(`${y}/solveClosestFacility`,d);return w.fromJSON(m)}var N=t(60672);let S=class extends N.Z{constructor(e){super(e),this.url=null}solve(e,r){return A(this.url,e,r)}};(0,i._)([(0,s.Cb)()],S.prototype,"url",void 0),S=(0,i._)([(0,a.j)("esri.tasks.ClosestFacilityTask")],S);const k=S}}]);
//# sourceMappingURL=8609.76b8eb30.js.map