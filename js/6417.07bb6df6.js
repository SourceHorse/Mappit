"use strict";(self["webpackChunkmappitweb"]=self["webpackChunkmappitweb"]||[]).push([[6417],{31660:function(e,t,r){r.r(t),r.d(t,{default:function(){return V}});var s=r(61445),i=r(94848),a=r(17426),o=r(22130),n=r(30374),l=r(11536),y=r(8693),p=r(74823),u=r(92454),h=r(58006),c=(r(15055),r(81653),r(94315)),m=r(62269),d=r(77623),b=r(73261),g=r(60549),f=r(50157),v=r(93592),S=r(29222),x=r(45181),_=r(59013),C=r(20694),O=r(18678),L=r(80397),w=r(35894),E=r(44283),I=r(82232),P=r(23706),D=r(47711),N=r(28161),M=r(12799),T=r(61804),J=r(8426),R=r(83437),j=r(24653);let F=class extends((0,O.h)((0,N.n)((0,P.M)((0,D.x)((0,_.O)((0,C.Y)((0,w.q)((0,E.I)((0,p.R)((0,I.Q)((0,x.V)((0,L.N)((0,n.p)(S.Z)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,y.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(u.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,g.M9)(s.origin);if(e===g.s3.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;a=(0,R.QV)(i,e,g.s3.SERVICE)}else if(e>g.s3.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");a=(0,R.QV)(i,e.sublayers,(0,g.M9)(e.origin))}}const o=[],n={writeSublayerStructure:a,...s};let l=a;i.forEach((e=>{const t=e.write({},n);o.push(t),l=l||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),l&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new T.R({layer:this,floors:null==s?void 0:s.floors,scale:(0,v.yZ)({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const n=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},l=e&&e.spatialReference,y=l.wkid||JSON.stringify(l.toJSON());o.dpi*=i;const p={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:t+","+r,...o,...n,...p}}async fetchImage(e,t,r,s){var a;const n={responseType:"image",signal:null!=(a=null==s?void 0:s.signal)?a:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";return null==n.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(0,i["default"])(l,n).then((e=>e.data)).catch((e=>{if((0,u.D_)(e))throw e;throw new o.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:e})})):Promise.reject(new o.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:r}=await(0,i["default"])(this.url,t),{extent:s,fullExtent:o,timeExtent:n}=r,l=s||o;return{fullExtent:l&&f.Z.fromJSON(l),timeExtent:n&&a.Z.fromJSON({start:n[0],end:n[1]})}}loadAll(){return(0,l.G)(this,(e=>{e(this.allSublayers)}))}serviceSupportsSpatialReference(e){return(0,j.D)(this,e)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,i["default"])(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};(0,s._)([(0,h.Cb)({type:Boolean})],F.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,h.Cb)()],F.prototype,"dpi",void 0),(0,s._)([(0,h.Cb)()],F.prototype,"gdbVersion",void 0),(0,s._)([(0,h.Cb)()],F.prototype,"imageFormat",void 0),(0,s._)([(0,m.r)("imageFormat",["supportedImageFormatTypes"])],F.prototype,"readImageFormat",null),(0,s._)([(0,h.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],F.prototype,"imageMaxHeight",void 0),(0,s._)([(0,h.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],F.prototype,"imageMaxWidth",void 0),(0,s._)([(0,h.Cb)()],F.prototype,"imageTransparency",void 0),(0,s._)([(0,h.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),(0,s._)([(0,h.Cb)({json:{read:!1,write:!1}})],F.prototype,"labelsVisible",void 0),(0,s._)([(0,h.Cb)({type:["ArcGISMapServiceLayer"]})],F.prototype,"operationalLayerType",void 0),(0,s._)([(0,h.Cb)({json:{read:!1,write:!1}})],F.prototype,"popupEnabled",void 0),(0,s._)([(0,h.Cb)()],F.prototype,"sourceJSON",void 0),(0,s._)([(0,h.Cb)({json:{write:{ignoreOrigin:!0}}})],F.prototype,"sublayers",void 0),(0,s._)([(0,b.c)("sublayers",{layers:{type:[J.Z]},visibleLayers:{type:[c.z8]}})],F.prototype,"writeSublayers",null),(0,s._)([(0,h.Cb)({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),(0,s._)([(0,h.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],F.prototype,"type",void 0),(0,s._)([(0,h.Cb)(M.HQ)],F.prototype,"url",void 0),F=(0,s._)([(0,d.j)("esri.layers.MapImageLayer")],F);const V=F},61804:function(e,t,r){r.d(t,{R:function(){return c}});var s=r(61445),i=r(92698),a=r(30374),o=r(8693),n=r(58006),l=(r(15055),r(81653),r(94315),r(77623)),y=r(12799),p=r(83437),u=r(29336);const h={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let c=class extends((0,a.p)(i.Z)){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>{const t=(0,u.ff)(this.floors,e);return e.toExportImageJSON(t)}));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,p.FN)(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(h[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){var e;const t=!(null==(e=this.floors)||!e.length),r=this.visibleSublayers.filter((e=>null!=e.definitionExpression||t&&null!=e.floorInfo));return r.length?JSON.stringify(r.reduce(((e,t)=>{const r=(0,u.ff)(this.floors,t),s=(0,o.pC)(r)?(0,u.Hp)(r,t):t.definitionExpression;return e[t.id]=s,e}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const t=this.layer.sublayers,r=t=>{const s=this.scale,i=0===s,a=0===t.minScale||s<=t.minScale,o=0===t.maxScale||s>=t.maxScale;t.visible&&(i||a&&o)&&(t.sublayers?t.sublayers.forEach(r):e.unshift(t))};t&&t.forEach(r);const s=this._get("visibleSublayers");return!s||s.length!==e.length||s.some(((t,r)=>e[r]!==t))?e:s}toJSON(){const e=this.layer;let t={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?t.dynamicLayers=this.dynamicLayers:t={...t,layers:this.layers,layerDefs:this.layerDefs},t}};(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"dynamicLayers",null),(0,s._)([(0,n.Cb)()],c.prototype,"floors",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"hasDynamicLayers",null),(0,s._)([(0,n.Cb)()],c.prototype,"layer",null),(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"layers",null),(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"layerDefs",null),(0,s._)([(0,n.Cb)({type:Number})],c.prototype,"scale",void 0),(0,s._)([(0,n.Cb)(y.qG)],c.prototype,"timeExtent",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"version",null),(0,s._)([(0,n.Cb)({readOnly:!0})],c.prototype,"visibleSublayers",null),c=(0,s._)([(0,l.j)("esri.layers.mixins.ExportImageParameters")],c)}}]);
//# sourceMappingURL=6417.07bb6df6.js.map