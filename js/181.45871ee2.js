"use strict";(self["webpackChunkmappitweb"]=self["webpackChunkmappitweb"]||[]).push([[181],{80181:function(e,t,i){i.r(t),i.d(t,{default:function(){return Ve}});var n=i(61445),r=i(41473),s=i(67143),a=i(22130),o=i(8693),l=i(74823),c=i(92454),u=i(58006),h=(i(15055),i(81653),i(94315)),f=i(56667),d=i(62269),p=i(77623),m=i(29222),y=i(18678),g=i(80397),x=(i(80388),i(94848)),v=i(93622),b=i(74904),w=i(54597),I=i(53317),_=i(12799),C=i(37309),S=i(36498),T=i(86052),R=i(45982),k=i(73980),M=i(17754),P=i(66224),O=i(50157),B=i(87429);const D=v.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),F=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",(0,I.Nm)(e,D))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,o.Wi)(e))return null;const i=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:n},t):(0,R.KC)(e,n)}async createStreamlinesMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createStreamlinesMesh(e,t):(0,P.z_)(e.rendererSettings,e.flowData,(0,o.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if((0,o.Wi)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,o.Wi)(i)&&i.length||(i=this._getDefaultSlice());const n=e.timeExtent||this.timeExtent;if((0,o.pC)(i)&&(0,o.pC)(n)&&((0,o.pC)(n.start)||(0,o.pC)(n.end))){var r,s;i=i.map((e=>e.clone()));const a=null==(r=t.variables.find((({name:e})=>e===i[0].variableName)))||null==(s=r.dimensions)?void 0:s.find((({name:e})=>"StdTime"===e)),l=i.find((({dimensionName:e})=>"StdTime"===e));if(!a||!l)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=n,h=(0,o.Wi)(c)?null:c.getTime(),f=(0,o.Wi)(u)?null:u.getTime(),d=null!=h?h:f,p=null!=f?f:h;if((0,o.pC)(a.values)){const e=a.values.filter((e=>{if(Array.isArray(e)){if(d===p)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<p&&e[1]>=p,i=e[0]>=d&&e[1]<=p||e[0]<d&&e[1]>p;return t||i}return d===p?e===d:e>=d&&e<=p}));if(e.length){const t=e.sort(((e,t)=>{var i,n,r,s;return d===p?(null!=(r=e[0])?r:e)-(null!=(s=t[0])?s:t):Math.abs((null!=(i=e[1])?i:e)-p)-Math.abs((null!=(n=t[1])?n:t)-p)}))[0];l.values=[t]}else i=null}else if(a.hasRegularIntervals&&a.extent){const[e,t]=a.extent;d>t||p<e?i=null:l.values=d===p?[d]:[Math.max(e,d),Math.min(t,p)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,k.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,o.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let n;await this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:s}=this;return n=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||(0,o.Wi)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,w.C5)(e);return T.Z.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const r=this.getTileUrl(e,t,i);return(0,x["default"])(r,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}if((0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,o.Wi)(n.multidimensionalDefinition))){const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n={}){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,o.Wi)(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,n))}async identify(e,t={}){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),(0,o.Wi)(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.pC)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new S.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,k.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!(0,o.pC)(e))return null;const t=e.variables[0];return t.dimensions.map((e=>{var i,n;return new C.Z({variableName:t.name,dimensionName:e.name,values:[null!=(i=null==(n=e.values)?void 0:n[0])?i:e.extent[0]],isSlice:!0})}))}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=(0,k.YD)(e)),this.renderer||(this.renderer=(0,k.Ob)(e,{bandIds:this.bandIds,variableName:(0,o.pC)(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=(0,k.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new M.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const i=this.symbolizer.bind();i.success||D.warn("imagery-tile-mixin",i.error||"The given renderer is not supported by the layer.")}};return(0,n._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,n._)([(0,u.Cb)({type:O.Z,json:{read:!1}}),(0,b.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)({type:[C.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,b.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({type:B.Z,json:{read:!1}}),(0,b.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,n._)([(0,u.Cb)({type:T.Z,json:{read:!1}}),(0,b.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,n._)([(0,u.Cb)(_.HQ)],t.prototype,"url",null),(0,n._)([(0,u.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,n._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,n._)([(0,p.j)("esri.layers.ImageryTileMixin")],t),t};var z=i(35894),A=i(44283),E=i(82232),Z=i(23706),L=i(28161),H=i(24881),N=i(71357),J=(i(48675),i(3462),i(84864)),W=i(77334),q=i(60931),j=i(66144),$=i(56437),U=i(30513),G=i(46814),V=i(3225),Y=i(49304);const X=8;let K=class extends((0,j.v)(q.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,V.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:T.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,V.ut)(e.spatialReference);return(0,o.pC)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,I.Nm)(e,v.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(s,r.size[0],r.size[1],n)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:r}=t;let s=(0,V.nF)(e,i,r);if(!n.intersects(s))return{location:s,value:null};if((0,o.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=(0,V.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=(0,$.Rq)(this.url,t.sliceId),p=`${a}/${c}/${u}`;let m=(0,$.Qg)(d,null,p);(0,o.Wi)(m)&&(m=this.fetchRawTile(a,c,u,t),(0,$.gX)(d,null,p,m));const y=await m;if((0,o.Wi)(y)||!y.pixels||0===y.pixels.length)return{location:s,value:null};const g=h*this.rasterInfo.storageInfo.blockHeight+f,x=!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,v=this.rasterInfo.dataType;return("vector-magdir"===v||"vector-uv"===v)&&(null==x?void 0:x.length)>1?{location:s,value:x,magdirValue:"vector-magdir"===v?[x[0],x[1]]:(0,R.Tg)([x[0],x[1]]),pyramidLevel:a}:{location:s,value:x,pyramidLevel:a}}async fetchPixels(e,t,i,n={}){if(e=(0,V.kZ)(e),(n=this._getRequestOptionsWithSliceId(n)).requestRawData)return this._fetchPixels(e,t,i,n);const r=(0,V.ut)(e.spatialReference),s=(0,V.Hq)(e);if((0,o.Wi)(r)||0===s||1===s&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,n);if(s>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,u=Math.round(r/(c-l)*t),h=u-Math.round((r/2-l)/(c-l)*t);let f=0;const d=[];for(let o=0;o<=s;o++){const p=new O.Z({xmin:0===o?l:-r/2,xmax:o===s?c-r*o:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===o?u-h:o===s?t-f:u;f+=m,d.push(m);const y=n.disableWrapAround&&o>0?null:this._fetchPixels(p,m,i,n);a.push(y)}const p=(await Promise.all(a)).map((e=>null==e?void 0:e.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},n)).pixelBlock:(0,G.us)(p,y,{blockWidths:d}),{extent:e,srcExtent:(0,V.tB)(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i,n={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,n),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,u=a.x*c,h=a.y*c,f=new O.Z({xmin:s.xmin+u*t.x,xmax:s.xmin+u*(t.x+i.width-1),ymin:s.ymax-h*(t.y+i.height-1),ymax:s.ymax-h*t.y,spatialReference:s.spatialReference});if(!r)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:p}=r;if(1===d.length&&(0,o.pC)(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:r.pixelBlocks[0]};const m=e>0?l.pyramidBlockWidth:l.blockWidth,y=e>0?l.pyramidBlockHeight:l.blockHeight,g={x:t.x%m,y:t.y%y};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:n.interpolation,alignmentInfo:null,blockWidths:null},n)).pixelBlock:(0,G.us)(d,p,{clipOffset:g,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:x}}fetchRawTile(e,t,i,n){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,V.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,U.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,r;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(n=null!=(r=i)?r:t.retryCount)?n:this.ioConfig.retryCount;const c=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,x["default"])(e,{...t,query:{...o,...s},headers:{...l,...c}})}catch(be){if(i>0)return i--,this.request(e,t,i);throw be}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.pC)(t))return null;if(!(0,o.pC)(e)||0===e.length)return null;let i=0;const n=e[0].variableName;for(let r=0;r<t.variables.length;r++){const s=t.variables[r],a=s.dimensions;if(s.name!==n){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const n=e.find((e=>e.dimensionName===a[t].name));if(null==n)return null;const r=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],s=this._getIndexFromDimensions(r,a[t]);if(-1===s)return null;o.shift(),i+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return i}getTileExtentFromTileInfo(e,t,i,n){const r=n.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const r=[],s=e.maximumPyramidLevel||0;let a=Math.max(n.x,n.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)r.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new Y.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new T.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:r,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new Y.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],n);e.storageInfo=new W.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,n,r,s=0,a=2){if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let u=0;u<r.length;u++){const{x:n,y:s}=r[u];o.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*s)/i/s),maxRow:Math.floor((c-e.ymin-.1*s)/i/s)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.pC)(i)&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i){const{spatialReference:n,nativeExtent:r}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,c=(0,V.nF)(e,n,i);if(!r.intersects(c))return null;if(t<0||t>o)return null;const u=this.getPyramidPixelSize(t),{x:h,y:f}=u,d=(l.y-c.y)/f/a,p=(c.x-l.x)/h/s,m=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(s-1,Math.floor((p-Math.floor(p))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:c}}getTileExtent(e,t,i,n,r,s){const[a,o]=s,l=n.x+i*a*e.x,c=l+a*e.x,u=n.y-t*o*e.y,h=u-o*e.y;return new O.Z({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}async _fetchPixels(e,t,i,n={}){let r=(0,V.Hq)(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:a,pyramidResolution:l,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:f}=s;if(0===h||0===f)return{extent:e,srcExtent:u,pixelBlock:null};const d=(0,o.Wg)(this.rasterInfo.transform),p="gcs-shift"===(null==d?void 0:d.type),m=(0,o.pC)((0,V.ut)(e.spatialReference));!p&&m||(r=(0,V.Hq)(s.srcExtent,p));const y=this.rasterInfo.storageInfo,g={x:Math.floor((u.xmin-y.origin.x)/l.x+.1),y:Math.floor((y.origin.y-u.ymax)/l.y+.1)},x=await this._fetchRawTiles(a,g,{width:h,height:f,wrapCount:r},n);if(!x)return{extent:e,srcExtent:u,pixelBlock:null};const v=a>0?y.pyramidBlockWidth:y.blockWidth,b=a>0?y.pyramidBlockHeight:y.blockHeight,w=v===h&&b===f&&g.x%v==0&&g.y%b==0,I=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:C}=n;if(!_&&w&&1===x.pixelBlocks.length&&v===t&&b===i&&c.x===I.x&&c.y===I.y)return{extent:e,srcExtent:u,pixelBlock:x.pixelBlocks[0]};const S=m&&(0,o.pC)((0,V.ut)(u.spatialReference)),T=n.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");T&&!this.rasterJobHandler&&await(0,V.zD)();const k=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I.toJSON(),datumTransformation:C,rasterTransform:d,hasWrapAround:r>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:T},n):(0,V.Qp)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I,datumTransformation:C,rasterTransform:d,hasWrapAround:r>0||S,isAdaptive:!1,includeGCSGrid:T});let M;const P=!n.requestRawData,O={rows:k.spacing[0],cols:k.spacing[1]},B=(0,o.Wg)(this._getRasterTileAlignmentInfo(a,x.extent.xmin)),{pixelBlocks:D,mosaicSize:F,isPartiallyFilled:z}=x;let A=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:F,destDimension:P?{width:t,height:i}:null,coefs:P?k.coefficients:null,sampleSpacing:P?O:null,projectDirections:T,gcsGrid:T?k.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:n.interpolation,alignmentInfo:B,blockWidths:null},n);({pixelBlock:M,localNorthDirections:A}=e)}else{const e=(0,G.us)(D,F,{alignmentInfo:B});M=P?(0,G.Uk)(e,{width:t,height:i},k.coefficients,O,n.interpolation):e,T&&k.gcsGrid&&(A=(0,G.Qh)({width:t,height:i},k.gcsGrid),M=(0,R.xQ)(M,this.rasterInfo.dataType,A))}return n.requestRawData||T?{srcExtent:u,pixelBlock:M,transformGrid:k,localNorthDirections:A,extent:e,isPartiallyFilled:z}:{srcExtent:u,extent:e,pixelBlock:M}}async _fetchRawTiles(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const p=this._getRasterTileAlignmentInfo(e,0);n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,h+=2*n.buffer.cols,f+=2*n.buffer.rows);let m=0,y=0,g=0;d&&(0,o.pC)(p)&&(({worldColumnCountFromOrigin:y,originColumnOffset:g,rightPadding:m}=p),y*p.blockWidth-m>=c+h&&(m=0));const x=Math.floor(c/a),v=Math.floor(u/l),b=Math.floor((c+h+m-1)/a),w=Math.floor((u+f+m-1)/l),I=s[e];if(!I)return null;const{minRow:_,minCol:C,maxCol:S,maxRow:T}=I;if(0===d&&(w<_||b<C||v>T||x>S))return null;const R=new Array;let k=!1;const M=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let O=v;O<=w;O++)for(let t=x;t<=b;t++){let i=t;if(!n.disableWrapAround&&d&&(0,o.pC)(p)&&y<=t&&(i=t-y-g),O>=_&&i>=C&&T>=O&&S>=i){const t=this._fetchRawTile(e,O,i,n);M?R.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{k=!0,e(null)}))}))):R.push(t)}else R.push(null)}if(0===R.length)return null;const P=await Promise.all(R),B={height:(w-v+1)*l,width:(b-x+1)*a},{spatialReference:D}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:z,y:A}=F;return{extent:new O.Z({xmin:r.x+x*a*z,xmax:r.x+(b+1)*a*z,ymin:r.y-(w+1)*l*A,ymax:r.y-v*l*A,spatialReference:D}),pixelBlocks:P,mosaicSize:B,isPartiallyFilled:k}}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:l,maxRow:u}=r;if(t<s||i<a||t>u||i>l)return Promise.resolve(null);const h=(0,$.Rq)(this.url,n.sliceId),f=`${e}/${t}/${i}`;let d=(0,$.Qg)(h,n.registryId,f);if((0,o.Wi)(d)){const r=new AbortController;d=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),(0,$.gX)(h,n.registryId,f,d,r),d.catch((()=>(0,$.Gc)(h,n.registryId,f)))}return n.signal&&(0,c.fu)(n,(()=>{(0,$.OE)(h,n.registryId,f)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:r,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/n);break;case"minutes":o=Math.round((e-a)/6e4/n);break;case"hours":o=Math.round((e-a)/36e5/n);break;case"days":o=Math.round((e-a)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/n)}return o}return Math.round((e-a)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:r}=e;let s=(null==r?void 0:r.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,V.P_)(this.rasterInfo)),(0,o.pC)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getSourceDataInfo(e,t,i,n={}){const r={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};n.srcResolution&&(r.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,r));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/t,u=o/i,h=l<s&&c*u>=16;if(h||l===s&&(c>X||u>X)||0===a||0===o){const a=new Y.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,V.VO)(a,this.rasterInfo.spatialReference,e,r.datumTransformation);const f=!o||n.srcResolution&&o.x+o.y<n.srcResolution.x+n.srcResolution.y;if(h&&n.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}o&&(r.srcResolution=o,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>X||r.srcHeight/i>X)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:n,datumTransformation:r}=t,{pyramidLevel:s,pyramidResolution:a,excessiveReading:l}=(0,V.kr)(n,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,V.tB)(e,i,r);if(null==c)return;const u=(0,o.Wg)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/a.x-.1),f=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=s,t.pyramidResolution=a,t.srcWidth=h,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return(0,o.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}};(0,n._)([(0,u.Cb)()],K.prototype,"_rasterTileAlighmentInfo",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],K.prototype,"_isGlobalWrappableSource",null),(0,n._)([(0,u.Cb)(_.HQ)],K.prototype,"url",null),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],K.prototype,"datasetName",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)()],K.prototype,"sourceJSON",void 0),K=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.BaseRaster")],K);const Q=K;var ee=i(31504);function te(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}class ie{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ee.f)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ee.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:te({fields:l,records:c})}}}var ne=i(56351),re=i(48169);const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const ae=8;let oe=class extends Q{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const s=this._buildCacheFilePath(r,t,i,n.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,a);if(0===c.recordSize)return null;const u=await this.request(s,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new B.Z(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let m=new O.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const y=new Y.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),g=Math.round((m.xmax-m.xmin)/y.x),x=Math.round((m.ymax-m.ymin)/y.y),v=this._parseTransform(e.geodataXform),b=v?m:null;v&&(m=v.forwardTransform(m),y.x=(m.xmax-m.xmin)/g,y.y=(m.ymax-m.ymin)/x);const w=null!=(i=e.properties)?i:{},I=e.format.toLowerCase().replace("cache/",""),_=new Y.Z(e.origin.x,e.origin.y,p);let C,S,R,k;if(a&&a.colors)for(C=[],S=0;S<a.colors.length;S++)R=a.colors[S],k=a.values?a.values[S]:S,C.push([k,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const M=e.LODInfos,P=[];for(S=0;S<M.levels.length;S++)P.push({level:M.levels[S],resolution:M.resolutions[S],scale:96/.0254*M.resolutions[S]});const D=new T.Z({dpi:96,lods:P,format:I,origin:_,size:[o,l],spatialReference:p}),F={recordSize:ae,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*ae+64},z=[{maxCol:Math.ceil(g/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let A=2;if(u>0)for(S=0;S<u;S++)z.push({maxCol:Math.ceil(g/A/o)-1,maxRow:Math.ceil(x/A/l)-1,minCol:0,minRow:0}),A*=2;const E=e.mdInfo;return{storageInfo:F,rasterInfo:new J.Z({width:g,height:x,pixelType:n,bandCount:r,extent:m,nativeExtent:b,transform:v,spatialReference:p,pixelSize:y,keyProperties:w,statistics:h,histograms:s,multidimensionalInfo:E,colormap:C,storageInfo:new W.Z({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:_,tileInfo:D,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:z})})}}_parseTransform(e){var t,i;if(!(0,ne.j)(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const n=(0,ne.c)(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(t=n.forwardCoefficients)||!t.length||null==(i=n.inverseCoefficients)||!i.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":se.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=ie.parse(n[1]).recordSet),re["default"].fromJSON(r)}_buildCacheFilePath(e,t,i,n){const r=this.storageInfo.packetSize,s=Math.floor(t/r)*r,a=Math.floor(i/r)*r,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==n?void 0:n[0];if(!(0,o.pC)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.find((e=>e.name===h.variableName)).dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let o=0;o<d;o++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const s=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:s,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,n._)([(0,u.Cb)({readOnly:!0})],oe.prototype,"storageInfo",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.CloudRaster")],oe);const le=oe;let ce=class extends Q{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:r,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new O.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new B.Z({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:f.width/c,y:f.height/u},m=new J.Z({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:n,isPseudoSpatialReference:d,histograms:r});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i,n={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve((0,G.Vl)(e,t,n)),s=(0,o.pC)(this.rasterInfo.statistics),l=(0,o.pC)(this.rasterInfo.histograms),u=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,G.Hv)(e)),h=await(0,c.as)([r,u]);if(!h[0].value&&h[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");var f,d;this._pixelBlockTiles=h[0].value,s||(this.rasterInfo.statistics=null==(f=h[1].value)?void 0:f.statistics),l&&(this.rasterInfo.histograms=null==(d=h[1].value)?void 0:d.histograms)}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],ce.prototype,"data",void 0),ce=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],ce);const ue=ce;i(26699);function he(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=he(e,i);for(let e=0;e<r.length;e++)he(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let s=0;s<r.length;s++)n.push(r[s]||r.item[s]);return n}function fe(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=he(e,i);return n.length>0?t?fe(n[0],t):n[0]:null}function de(e,t=null){const i=t?fe(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function pe(e,t){const i=he(e,t),n=[];let r;for(let s=0;s<i.length;s++)r=i[s].textContent||i[s].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}function me(e,t){return pe(e,t).map((e=>Number(e)))}function ye(e,t){const i=de(e,t);return Number(i)}function ge(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}var xe=i(5428);function ve(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function be(e){var t;const i=fe(e,"GeodataXform"),n=Ie(ye(i,"SpatialReference/WKID")||de(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!=(t=ye(i,"PolynomialOrder"))?t:1,s=me(i,"CoeffX/Double"),a=me(i,"CoeffY/Double"),o=me(i,"InverseCoeffX/Double"),l=me(i,"InverseCoeffY/Double"),c=ve(s,a),u=ve(o,l);return{spatialReference:n,transform:new xe.Z({spatialReference:n,polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u})}}function we(e){var t;const i=ye(e,"NoDataValue"),n=fe(e,"Histograms/HistItem"),r=ye(n,"HistMin"),s=ye(n,"HistMax"),a=ye(n,"BucketCount"),o=null==(t=de(n,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;he(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const f=ye(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}function Ie(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new B.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),r=n>-1?n:e.indexOf("GEOGCS");if(-1===r)return null;const s=e.slice(r,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=_e(s);const o=new B.Z(t?{wkid:t}:{wkt:s}),l=_e(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=_e(e),new B.Z(0!==t?{wkid:t}:{wkt:e})):null}function _e(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=i[i.length-1].split(","),r=null==(t=n[0])?void 0:t.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Ce(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(ge(e,"SRS")){if(!i.spatialReference){const t=de(e);i.spatialReference=Ie(t)}}else if(ge(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=be(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else he(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=de(e)));else if(ge(e,"PAMRasterBand")){const t=we(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)):null}return i}let Se=class extends Q{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new B.Z({wkid:3857})),null!=r&&r.length&&null==n&&(n=(0,G.Oh)(r));const{width:o,height:l}=t;let c=new O.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=s?s.forwardTransform(c):c;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,c=u)}const f=new ue({data:{extent:u,nativeExtent:c,transform:s,pixelBlock:t,statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=(0,U.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=(0,o.Wg)(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],s=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,u=r.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),h=await(0,c.as)([s,u]);if(null!=n&&n.aborted)throw(0,c.zE)();const f=Ce(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new xe.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Se);const Te=Se;var Re=i(99659),ke=i(22674),Me=i(7534),Pe=i(40385);let Oe=class extends Q{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=n.cacheType,null==this.tileType&&(r.indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const s=await this._fetchRasterInfo({signal:t});if(!(0,o.pC)(s))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,ke.d)(n.tileInfo,n):T.Z.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=s,r=.5/s.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(a=e.lods.find((e=>e.resolution===i.x)),a||(a=e.lods[e.lods.length-1])):(a=e.lods.find((e=>Math.abs(e.scale-n.maxScale)<r)),a||(a=e.lods.filter((e=>e.scale>n.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.find((e=>Math.abs(e.scale-n.minScale)<r)),this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>r||!e.lods.some((e=>Math.abs(e.resolution-u)<r)))&&(i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=a.level-o.level,[f,d]=e.size,p=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&p.push({x:e.resolution,y:e.resolution})})),p.sort(((e,t)=>e.x-t.x));const m=this.computeBlockBoundary(t,f,d,e.origin,p,h),y=p.length>1?p.slice(1):null;s.storageInfo=new W.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:m}),this._fixGCSShift(s),this._set("rasterInfo",s)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,Re.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Me.y({layer:e})}}async fetchRawTile(e,t,i,n={}){if(this._slices&&null==n.sliceId)return null;const{storageInfo:r,extent:s}=this.rasterInfo,a=r.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:n.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:n.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=r.blockBoundary[e];if("jpg"!==r.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return u;const{origin:f,blockWidth:d,blockHeight:p}=r,{x:m,y:y}=this.getPyramidPixelSize(e),g=Math.round((s.xmin-f.x)/m)%d,x=Math.round((s.xmax-f.x)/m)%d||d,v=Math.round((f.y-s.ymax)/y)%p,b=Math.round((f.y-s.ymin)/y)%p||p,w=i===h.minCol?g:0,I=t===h.minRow?v:0,_=i===h.maxCol?x:d,C=t===h.maxRow?b:p;return(0,G.pW)(u,{x:w,y:I},{width:_-w,height:C-I}),u}getSliceIndex(e){if(!this._slices||(0,o.Wi)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),r=await Promise.all([i,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,o.Wg)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(a,n,(0,o.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),r=B.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new J.Z({width:i,height:n,bandCount:3,extent:O.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new Y.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>re["default"].fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,c,u,h,f]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new J.Z({width:i,height:n,bandCount:t.bandCount,extent:O.Z.fromJSON(t.extent),spatialReference:r,pixelSize:new Y.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Pe.Z,e.extent=e.transform.forwardTransform(t))}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],Oe.prototype,"tileType",void 0),Oe=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Oe);const Be=Oe;var De=i(54065),Fe=i(11764);const ze=new Map;ze.set("Int8","s8"),ze.set("UInt8","u8"),ze.set("Int16","s16"),ze.set("UInt16","u16"),ze.set("Int32","s32"),ze.set("UInt32","u32"),ze.set("Float32","f32"),ze.set("Float64","f32"),ze.set("Double64","f32");const Ae=new Map;Ae.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ae.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ae.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ae.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Ee=class extends Q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,o.Wg)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(r.statistics=null!=(a=t.statistics)?a:r.statistics,r.histograms=t.histograms,t.histograms&&!(0,o.pC)(r.statistics)&&(r.statistics=(0,G.Oh)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:d}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let y=0,g=-1;for(;y<this._storageIndex.length;){g++;const e=Math.ceil(f/c/h**g)-1,t=Math.ceil(d/u/h**g)-1;y+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:r,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(r*s);return new De.Z({width:r,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:n.signal}));const x=await Promise.all(y),v=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),b=new Uint8Array(v);let w=0;for(g=0;g<m;g++)b.set(new Uint8Array(x[g].data),w),w+=x[g].data.byteLength;const I=Ae.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(b.buffer,{width:r,height:s,format:I,planes:(null==p?void 0:p.length)||c,pixelType:u});if((0,o.pC)(this.rasterInfo.noDataValue)&&"lerc"!==I&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((_.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)_.pixels[0][g]!==e&&(i[g]=1);_.mask=i}}let C=0,S=0;if(f!==r||d!==s){let e=_.mask;if(e)for(g=0;g<s;g++)if(S=g*r,g<d)for(C=f;C<r;C++)e[S+C]=0;else for(C=0;C<r;C++)e[S+C]=0;else for(e=new Uint8Array(r*s),_.mask=e,g=0;g<d;g++)for(S=g*r,C=0;C<f;C++)e[S+C]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,s,a;if(Fe.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Ae.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<e;h++)d=s**h,c=Math.ceil(a/n/d),u=Math.ceil(o/r/d),f+=c*u;d=s**e,c=Math.ceil(a/n/d),u=Math.ceil(o/r/d),f+=t*c+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const g=[];for(let x=0;x<l;x++)m=p[4*x+0]*2**32+p[4*x+1],y=m+p[4*x+2]*2**32+p[4*x+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?n:Math.ceil(a/d)-n*(c-1),actualTileHeight:t<u-1?r:Math.ceil(o/d)-r*(u-1)}}_parseHeader(e){const t=fe(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=fe(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(de(t,"Compression")||"none").toLowerCase();if(!Ae.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=de(t,"DataType")||"UInt8",c=ze.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const u=fe(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=fe(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),fe(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=fe(e,"MRF_META/GeoTags"),g=fe(y,"BoundingBox");let x,v=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy")),r=de(y,"Projection")||"";let s;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(s=new B.Z({wkid:e}))}else s=Ie(r);else v=!0,s=new B.Z({wkid:3857});x=new O.Z(e,t,i,n),x.spatialReference=s}else v=!0,x=new O.Z({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:new B.Z({wkid:3857})});const b=fe(e,"MRF_META/Rsets"),w=parseInt(b&&b.getAttribute("scale")||"2",10),I=x.spatialReference,_=new W.Z({origin:new Y.Z({x:x.xmin,y:x.ymax,spatialReference:I}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:w}),C=new Y.Z({x:x.width/n,y:x.height/r,spatialReference:I}),S=new J.Z({width:n,height:r,extent:x,isPseudoSpatialReference:v,spatialReference:I,bandCount:s,pixelType:c,pixelSize:C,noDataValue:p,storageInfo:_}),T=de(e,"datafile"),R=de(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",Ae.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ce(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],Ee.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],Ee.prototype,"_storageIndex",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=(0,n._)([(0,p.j)("esri.layers.support.rasterIO.MRFRaster")],Ee);const Ze=Ee;var Le=i(79781),He=i(95400);const Ne=function(e,t){const i=e.get(t);return i&&i.values},Je=function(e,t){const i=e.get(t);return i&&i.values[0]};let We=class extends Q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,n;await this.init();const r=e?(0,o.Wg)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:r});if(!s)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=(0,Le.cK)(s),h=[];await this._readIFDs(h,s,l,c,0,u?8:4,r);const f=(0,Le.FI)(h),{width:d,height:p,tileWidth:m,tileHeight:y,planes:g,pixelType:x,compression:v,firstPyramidLevel:b,maximumPyramidLevel:w,pyramidBlockWidth:I,pyramidBlockHeight:_,tileBoundary:C,affine:S,metadata:T}=f,R=(null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(i=f.extent.spatialReference)?void 0:i.wkid);let k=Ie(R),M=!1;null==k&&(M=!0,k=new B.Z({wkid:3857}));const P=new O.Z({...f.extent,spatialReference:k}),D=new Y.Z(P?{x:P.xmin,y:P.ymax,spatialReference:k}:{x:0,y:0}),F=new W.Z({blockWidth:m,blockHeight:y,pyramidBlockWidth:I,pyramidBlockHeight:_,compression:v,origin:D,firstPyramidLevel:b,maximumPyramidLevel:w,blockBoundary:C}),z=new Y.Z({x:(P.xmax-P.xmin)/d,y:(P.ymax-P.ymin)/p,spatialReference:k}),A=T?{BandProperties:T.bandProperties,DataType:T.dataType}:{},E=new J.Z({width:d,height:p,bandCount:g,pixelType:x,compression:v,pixelSize:z,storageInfo:F,spatialReference:k,isPseudoSpatialReference:M,keyProperties:A,extent:P,statistics:T?T.statistics:null});if(null!=S&&S.length&&(E.nativeExtent=new O.Z({xmin:-.5,ymin:.5-p,xmax:d-.5,ymax:.5,spatialReference:k}),E.transform=new xe.Z({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),E.extent=E.transform.forwardTransform(E.nativeExtent),E.pixelSize=new Y.Z({x:(P.xmax-P.xmin)/d,y:(P.ymax-P.ymin)/p,spatialReference:k}),F.origin.x=-.5,F.origin.y=.5),null==(n=this.ioConfig.skipExtensions)||!n.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var Z;if(E.statistics=null!=(Z=t.statistics)?Z:E.statistics,E.histograms=t.histograms,t.histograms&&!(0,o.pC)(E.statistics)&&(E.statistics=(0,G.Oh)(t.histograms)),t.transform&&!S){E.transform=t.transform,E.nativeExtent=E.extent;const e=E.transform.forwardTransform(E.nativeExtent);E.pixelSize=new Y.Z({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/p,spatialReference:k}),E.extent=e}E.spatialReference||(E.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",E),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:h,...f},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){var r;if(null==(r=this._headerInfo)||!r.isSupported||this.isBlockOutside(e,t,i))return null;const s=this._getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),h=await Promise.all(u),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===h.length?h[0].data:new ArrayBuffer(f),p=[0],m=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const n=h[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,m[t]=n.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});let v,b,w;if(o!==y||l!==g){let e=x.mask;if(e)for(v=0;v<g;v++)if(w=v*y,v<l)for(b=o;b<y;b++)e[w+b]=0;else for(b=0;b<y;b++)e[w+b]=0;else for(e=new Uint8Array(y*g),x.mask=e,v=0;v<l;v++)for(w=v*y,b=0;b<o;b++)e[w+b]=1}return x}async _readIFDs(e,t,i,n,r,s=4,a){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=n+r,n=0);const o=await this._readIFD(t,i,n,r,He.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-r,r,s,a)}async _readIFD(e,t,i,n,r=He.Z.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,Le.vr)(e,t,i,n,r,s);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=r,n=s,i.forEach((i=>(0,Le.Dq)(e,t,i,n)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],o=await this._readIFD(e,t,i.valueOffset+6-n,n,He.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,n,He.Z.TIFF_TAGS,4,a)}}_getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,s=0===e?0:e-(n-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,Le.If)(a,this._headerInfo),l=Ne(a,"TILEOFFSETS");if(void 0===l)return null;const c=Ne(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=r[s];if(t>f||i>d||t<u||i<h)return null;const p=Je(a,"IMAGEWIDTH"),m=Je(a,"IMAGELENGTH"),y=Je(a,"TILEWIDTH"),g=Je(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,v=x*t*(d+1)+i,b=[{from:l[v],to:l[v+x-1]+c[v+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[v+t]+c[v+t]!==l[v+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)b[t]={from:l[v+t],to:l[v+t]+c[v+t]-1}}const w=l[v],I=c[v];return null==w||null==I?null:{ranges:b,ifd:a,actualTileWidth:i===d?p%y:y,actualTileHeight:t===f?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ce(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],We.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],We.prototype,"_headerInfo",void 0),(0,n._)([(0,u.Cb)()],We.prototype,"_bufferSize",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],We.prototype,"datasetFormat",void 0),We=(0,n._)([(0,p.j)("esri.layers.support.rasterDatasets.TIFFRaster")],We);const qe=We,je=new Map;je.set("CRF",{desc:"Cloud Raster Format",constructor:le}),je.set("MRF",{desc:"Meta Raster Format",constructor:Ze}),je.set("TIFF",{desc:"GeoTIFF",constructor:qe}),je.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Be}),je.set("JPG",{desc:"JPG Raster Format",constructor:Te}),je.set("PNG",{desc:"PNG Raster Format",constructor:Te}),je.set("GIF",{desc:"GIF Raster Format",constructor:Te}),je.set("BMP",{desc:"BMP Raster Format",constructor:Te});class $e{static get supportedFormats(){const e=new Set;return je.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(r="RasterTileServer");const s={url:t,sourceJSON:n,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(r))return o=je.get(r).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(r)throw new a.Z("rasterfactory:open","not a supported format "+r);const c=Array.from(je.keys());let u=0;const h=function(){return r=c[u++],r?(o=je.get(r).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>h()))):null};return h()}static register(e,t,i){je.has(e.toUpperCase())||je.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ue=i(20837);let Ge=class extends((0,y.h)((0,Z.M)((0,z.q)((0,A.I)((0,g.N)(F((0,L.n)((0,E.Q)((0,l.R)(m.Z)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new H.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields,r="Raster.";if(n){const e=n.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name=r+e.name,t}));i=i.concat(e)}const s=this.rasterInfo.dataType;if(("vector-magdir"===s||"vector-uv"===s)&&(0,o.pC)(this.rasterInfo.multidimensionalInfo)){var a;const e=null==(a=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:a.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new H.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new H.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,s.ij)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,Ue.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await $e.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,n._)([(0,u.Cb)({type:[h.z8],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],Ge.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,f.J)(N.c)],Ge.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ge.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)(_.rn)],Ge.prototype,"legendEnabled",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ge.prototype,"isReference",void 0),(0,n._)([(0,u.Cb)({type:["show","hide"]})],Ge.prototype,"listMode",void 0),(0,n._)([(0,u.Cb)()],Ge.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Ge.prototype,"version",void 0),(0,n._)([(0,u.Cb)()],Ge.prototype,"title",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Ge.prototype,"type",void 0),(0,n._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],Ge.prototype,"operationalLayerType",void 0),(0,n._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Ge.prototype,"popupEnabled",void 0),(0,n._)([(0,u.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Ge.prototype,"popupTemplate",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],Ge.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.Cb)({readOnly:!0,type:[H.Z]})],Ge.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:[H.Z]})],Ge.prototype,"rasterFields",null),(0,n._)([(0,u.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],Ge.prototype,"renderer",null),(0,n._)([(0,d.r)("renderer")],Ge.prototype,"readRenderer",null),Ge=(0,n._)([(0,p.j)("esri.layers.ImageryTileLayer")],Ge);const Ve=Ge},7534:function(e,t,i){i.d(t,{y:function(){return T}});var n,r=i(61445),s=i(94848),a=i(92698),o=i(37484),l=i(22130),c=i(30374),u=i(93622),h=i(4860),f=i(88071),d=i(92454),p=i(18105),m=i(3047),y=i(99659),g=i(58006),x=i(15055),v=(i(81653),i(4524)),b=i(77623),w=(i(48675),i(3462),i(86232));class I{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,r=i>>3,s=this._tileAvailabilityBitSet;return r<0||r>s.length?"unknown":s[r]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,r=!0;const s=Math.ceil(t*i/8),a=new Uint8Array(s);let o=0;for(let l=0;l<e.length;l++){const t=l%8;e[l]?(r=!1,a[o]|=1<<t):n=!1,7===t&&++o}r?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=a,this.byteSize+=a.length)}static fromDefinition(e,t){const i=e.service.request||s["default"],{row:n,col:r,width:a,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(C(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:r,width:a,height:o},valid:!0,data:(0,x.a9)(a*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==n||e.location.left!==r||e.location.width!==a||e.location.height!==o))throw new l.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:r,width:a,height:o}});return I.fromJSON(e)}))}static fromJSON(e){I._validateJSON(e);const t=new I;return t.location=Object.freeze((0,w.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new l.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function _(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function C(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}const S=u.Z.getLogger("esri.layers.support.TilemapCache");let T=n=class extends((0,c.p)(a.Z)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.Y8.MEGABYTES,this.request=s["default"],this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h.Z(this.cacheByteSize),this.handles.add([this.watch(["layer.parsedUrl","layer.tileServers?","layer.apiKey?","layer.customParameters?"],(()=>this._initializeTilemapDefinition())),(0,p.YP)((()=>{var e,t;return null==(e=this.layer)||null==(t=e.tileInfo)?void 0:t.lods}),(e=>this._initializeAvailableLevels(e)),p.tX)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(S.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const r=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,r);if(s)return Promise.resolve(s);const a=n&&n.signal;return n={...n,signal:null},new Promise(((e,t)=>{(0,d.fu)(a,(()=>t((0,d.zE)())));const i=_(r);let s=this._pendingTilemapRequests[i];if(!s){s=I.fromDefinition(r,n).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=s,s.then(e,e)}s.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch((e=>e)).then((n=>{if(n instanceof I){const r=n.getAvailability(t,i);return"unavailable"===r?Promise.reject(new l.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):r}if((0,d.D_)(n))throw n;return"unknown"})):Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const s=this.layer.tileInfo;s.updateTileInfo(n);const a=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,d.D_)(e))throw e;if(s.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e}));return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,s,a){if(!this._prefetchingEnabled)return;const o=`prefetch-${e}`;if(this.handles.has(o))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let c=!1;const u={remove(){c||(c=!0,l.abort())}};if(this.handles.add(u,o),await(0,m.MU)(10,l.signal).catch((()=>{})),c||(c=!0,this.handles.remove(o)),(0,d.Hc)(l))return;const h={id:e,level:t,row:i,col:r},f={...s,signal:l.signal},p=this.layer.tileInfo;for(let d=0;n._prefetches.length<n._maxPrefetch&&p.upsampleTile(h);++d){const e=this.fetchAvailability(h.level,h.row,h.col,f);n._prefetches.push(e);const t=()=>{n._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,y.B7)({...t.query,...n,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=_(n);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};T._maxPrefetch=4,T._prefetches=new f.Z({initialSize:n._maxPrefetch}),(0,r._)([(0,g.Cb)({constructOnly:!0,type:Number})],T.prototype,"levels",void 0),(0,r._)([(0,v.p)("levels")],T.prototype,"castLevels",null),(0,r._)([(0,g.Cb)({readOnly:!0,type:Number})],T.prototype,"size",null),(0,r._)([(0,g.Cb)({constructOnly:!0,type:Number})],T.prototype,"cacheByteSize",void 0),(0,r._)([(0,g.Cb)({constructOnly:!0})],T.prototype,"layer",void 0),(0,r._)([(0,g.Cb)({constructOnly:!0})],T.prototype,"request",void 0),T=n=(0,r._)([(0,b.j)("esri.layers.support.TilemapCache")],T)},56437:function(e,t,i){i.d(t,{OE:function(){return f},Gc:function(){return m},Qg:function(){return d},Rq:function(){return c},gX:function(){return p},z2:function(){return u},ET:function(){return h},Vx:function(){return g}});i(80388);var n=i(8693);class r{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}var s=i(3225),a=i(49304);const o=new Map,l=new r;function c(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(o.has(e)){const t=o.get(e);return t.push(i),t.length-1}return o.set(e,[i]),0}function h(e,t){if(o.has(e)){const i=o.get(e);i[t]=null,i.some((e=>null!=e))||o.delete(e)}}function f(e,t,i){if(!o.has(e))return null==t?l.decreaseRefCount(e,i):0;const n=o.get(e);if(null==n[t])return l.decreaseRefCount(e,i);const r=n[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,i){if(!o.has(e))return null==t?l.getBlock(e,i):null;const n=o.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return l.getBlock(e,i)}const r=n[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let s=0;s<n.length;s++)if(s!==t&&n[s]&&n[s]&&n[s].cache.has(i)){const e=n[s].cache.get(i);return e.refCount++,r.set(i,e),e.block}return null}function p(e,t,i,n,r=null){if(!o.has(e))return void(null==t&&l.putBlock(e,i,n,r));const s=o.get(e);if(null==s[t])return void l.putBlock(e,i,n,r);const a={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:r};n.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),s[t].cache.set(i,a)}function m(e,t,i){if(!o.has(e))return void(null==t&&l.deleteBlock(e,i));const n=o.get(e);null!=n[t]?n[t].cache.delete(i):l.deleteBlock(e,i)}function y(e,t){if(!o.has(e))return null;const i=o.get(e);return null==i[t]?null:i[t]}function g(e,t,i,r,o,l,c=null){const u=y(e,t),h=u.extent,{cache:f,rasterInfo:d}=u;if(h&&h.xmin===i.xmin&&h.xmax===i.xmax&&h.ymin===i.ymin&&h.ymax===i.ymax)return;const p=i.clone().normalize(),{spatialReference:m,transform:g}=d,x=new Set;for(let y=0;y<p.length;y++){const e=p[y];if(e.xmax-e.xmin<=r||e.ymax-e.ymin<=r)continue;let t=(0,s.tB)(e,m,c);(0,n.pC)(g)&&(t=g.inverseTransform(t));const i=new a.Z({x:r,y:r,spatialReference:e.spatialReference});if(null==o&&!(o=(0,s.VO)(i,m,e,c)))return;const{pyramidLevel:u,pyramidResolution:h,excessiveReading:f}=(0,s.kr)(o,d,l||"closest");if(f)return;const{storageInfo:v}=d,{origin:b}=v,w={x:Math.max(0,Math.floor((t.xmin-b.x)/h.x)),y:Math.max(0,Math.floor((b.y-t.ymax)/h.y))},I=Math.ceil((t.xmax-t.xmin)/h.x-.1),_=Math.ceil((t.ymax-t.ymin)/h.y-.1),C=u>0?v.pyramidBlockWidth:v.blockWidth,S=u>0?v.pyramidBlockHeight:v.blockHeight,T=1,R=Math.max(0,Math.floor(w.x/C)-T),k=Math.max(0,Math.floor(w.y/S)-T),M=Math.floor((w.x+I-1)/C)+T,P=Math.floor((w.y+_-1)/S)+T;for(let n=k;n<=P;n++)for(let e=R;e<=M;e++)x.add(`${u}/${n}/${e}`)}f.forEach(((e,t)=>{if(!x.has(t)){const e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}})),u.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},52760:function(e,t,i){i.d(t,{Z:function(){return l}});var n=i(61445),r=i(60931),s=i(58006),a=(i(15055),i(81653),i(94315),i(77623));let o=class extends r.wq{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n._)([(0,s.Cb)()],o.prototype,"affectsPixelSize",null),(0,n._)([(0,s.Cb)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,n._)([(0,a.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o);const l=o},40385:function(e,t,i){i.d(t,{Z:function(){return c}});var n=i(61445),r=i(58006),s=(i(15055),i(81653),i(94315),i(56667)),a=i(77623),o=i(52760);let l=class extends o.Z{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,n._)([(0,s.J)({GCSShiftXform:"gcs-shift"})],l.prototype,"type",void 0),(0,n._)([(0,r.Cb)()],l.prototype,"tolerance",void 0),l=(0,n._)([(0,a.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],l);const c=l},5428:function(e,t,i){i.d(t,{Z:function(){return y}});var n=i(61445),r=(i(80388),i(58006)),s=(i(15055),i(81653),i(94315),i(56667)),a=i(62269),o=i(77623),l=i(73261),c=i(52760),u=i(49304),h=i(50157);function f(e,t,i){const{x:n,y:r}=t;if(i<2)return{x:e[0]+n*e[2]+r*e[4],y:e[1]+n*e[3]+r*e[5]};if(2===i){const t=n*n,i=r*r,s=n*r;return{x:e[0]+n*e[2]+r*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+n*e[3]+r*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=n*n,a=r*r,o=n*r,l=s*n,c=s*r,u=n*a,h=r*a;return{x:e[0]+n*e[2]+r*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+n*e[3]+r*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function d(e,t,i){const{xmin:n,ymin:r,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:a}),l.push({x:s,y:a}),l.push({x:n,y:r}),l.push({x:s,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:r+(a-r)*t/(e-1)}),l.push({x:s,y:r+(a-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(s-n)*t/e,y:r}),l.push({x:n+(s-n)*t/e,y:a})}l=l.map((t=>f(e,t,i)));const c=l.map((e=>e.x)),u=l.map((e=>e.y));return new h.Z({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}function p(e){const[t,i,n,r,s,a]=e,o=n*a-s*r,l=s*r-n*a;return[(s*i-t*a)/o,(n*i-t*r)/l,a/o,r/l,-s/o,-n/l]}let m=class extends c.Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeForwardCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<(null==e?void 0:e.length);s++)s%2==0?n.push(e[s]):r.push(e[s]);t.coeffX=n,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=p(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeInverseCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<(null==e?void 0:e.length);s++)s%2==0?n.push(e[s]):r.push(e[s]);t.inverseCoeffX=n,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=f(this.forwardCoefficients,e,this.polynomialOrder);return new u.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=f(this.inverseCoefficients,e,this.polynomialOrder);return new u.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}};(0,n._)([(0,r.Cb)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,n._)([(0,r.Cb)()],m.prototype,"forwardCoefficients",void 0),(0,n._)([(0,a.r)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,n._)([(0,l.c)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,n._)([(0,r.Cb)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,n._)([(0,a.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,n._)([(0,l.c)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,n._)([(0,r.Cb)()],m.prototype,"affectsPixelSize",null),(0,n._)([(0,s.J)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=(0,n._)([(0,o.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],m);const y=m},56351:function(e,t,i){i.d(t,{j:function(){return d},c:function(){return p}});i(26699);var n=i(40385),r=i(61445),s=(i(93622),i(94315),i(15055),i(81653),i(10771),i(56667)),a=i(77623),o=i(52760);let l=class extends o.Z{constructor(){super(...arguments),this.type="identity"}};(0,r._)([(0,s.J)({IdentityXform:"identity"})],l.prototype,"type",void 0),l=(0,r._)([(0,a.j)("esri.layers.support.rasterTransforms.IdentityTransform")],l);const c=l;var u=i(5428);const h={GCSShiftXform:n.Z,IdentityXform:c,PolynomialXform:u.Z},f=Object.keys(h);function d(e){const t=null==e?void 0:e.type;return!e||f.includes(t)}function p(e){if(!(null==e?void 0:e.type))return null;const t=h[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}},22674:function(e,t,i){i.d(t,{d:function(){return s},h:function(){return r}});var n=i(86052);const r={type:n.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:s}}}}};function s(e,t,i,r){if(!e)return null;const{minScale:s,maxScale:a,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return r&&r.ignoreMinMaxLOD?n.Z.fromJSON(e):n.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=o&&e<=l))});if(0!==s&&0!==a){const t=e=>Math.round(1e4*e)/1e4,i=s?t(s):1/0,r=a?t(a):-1/0;return n.Z.fromJSON({...e,lods:e.lods.filter((e=>{const n=t(e.scale);return n<=i&&n>=r}))})}return n.Z.fromJSON(e)}}}]);
//# sourceMappingURL=181.45871ee2.js.map